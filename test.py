from random import randint
'''mas = list()
for i in range(21):
    for _ in range(2):
        mas.append(i)'''
mas = [i for i in range(21)]

# 1 --------------------------------------------------------------------------------
step = randint(0, 10000)
step -= step // len(mas) * len(mas)
mas = mas[-step:] + mas[:-step]
print(mas)
# 2 --------------------------------------------------------------------------------


def find_max(lst, left, right):
    if lst[0] > lst[-1]:
        mid = int((left + right) / 2)
        if lst[mid] < lst[right]:
            find_max(lst, left, mid)
        elif lst[mid + 1] > lst[mid] > lst[right]:
            find_max(lst, mid, right)
        elif lst[mid + 1] < lst[mid] > lst[right]:
            print(lst[mid])
    else:
        print(lst[-1])


# 3 --------------------------------------------------------------------------------


def find_max_double(lst, left, right):
    if lst[0] >= lst[-1]:
        mid = round((left + right) / 2) - 1
        n = 0
        for j, v in enumerate(lst[mid:]):
            if v != lst[mid]:
                n = mid + j - 1
                break
        if lst[n] > lst[n + 1]:
            print('res:', lst[n])
        elif lst[mid] > lst[right]:
            find_max_double(lst, mid + 1, right)
        elif lst[mid] <= lst[right]:
            find_max_double(lst, left, mid + 1)
    else:
        print('res:', lst[-1])


find_max(mas, 0, len(mas) - 1)
# 4 5 ------------------------------------------------------------------------------
'''
Сложность алгоритма для списка не содержащего повторяющие числа log2(20) ~ 4.32
Сложность алгоритма для списка содержащего повторяющие числа log2(40) ~ 5.32
'''
# 6 --------------------------------------------------------------------------------
'''
- Если первый элемент исходного списка меньше последнего элемента, то наибольшее значение - это последний элемент
- Делим массив поплам и берём элемент с индексом серед = окр((правый.к + левый.к) / 2) - 1
- Если элементы повторяются, то ищем индекс самого последнего элемента в ряду повторяющихся чисел (например: 
    (3, 3, 3, 4) -> индекс = 2)
- Если элемент по новому индексу бельше следующего в списке, то выводим ответ - значение элемента по индексу
- Иначе. Если для значений индексов серед и правый.к верно условие: серед.знач > правый.к.знач, то левый.к = серед и 
    переходим ко 2 пункту алгоритма.
- Иначе. Если для значений индексов серед и правый.к верно условие: серед.знач <= правый.к.знач, то правый.к = серед и 
    переходим ко 2 пункту алгоритма.
'''

